buildscript {
    ext.kotlin_version = '1.3.11'
    ext.ktor_version = '1.1.1'
    ext.dokka_version = '0.9.17'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

allprojects {
    group 'jp.nephy'

    apply plugin: 'kotlin'
    apply plugin: 'kotlinx-serialization'
    apply plugin: 'org.jetbrains.dokka'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlin-eap" }
        maven { url "https://kotlin.bintray.com/ktor" }
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
        kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental", "-Xallow-result-return-type"]
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
        kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental", "-Xallow-result-return-type"]
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/javadoc"
        includeNonPublic = false
        skipDeprecated = false
        reportUndocumented = true
        skipEmptyPackages = true
        impliedPlatforms = ["JVM"]
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    /* Discord */
    compile "net.dv8tion:JDA:3.8.1_450"
    compile "com.sedmelluq:lavaplayer:1.3.10"
    compile "com.sedmelluq:jda-nas:1.0.6"

    /* Twitter */
    compile "jp.nephy:penicillin:3.3.3"

    /* Web Server & Client */
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "io.ktor:ktor-metrics:$ktor_version"
    compile "io.ktor:ktor-client-cio:$ktor_version"

    /* Hot reloading */
    compile "io.methvin:directory-watcher:0.9.0"

    /* Logging */
    compile "io.github.microutils:kotlin-logging:1.6.22"
    compile "ch.qos.logback:logback-core:1.2.3"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "org.fusesource.jansi:jansi:1.17.1"
}

subprojects {
    dependencies {
        compile rootProject
    }

    task fatJar(type: Jar) {
        manifest {
            attributes "Main-Class": "jp.nephy.glados.GLaDOS"
        }
        baseName = "glados-full"
        from {
            configurations.compile.findAll {
                !it.name.endsWith('pom')
            }.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
        with jar
    }
}
